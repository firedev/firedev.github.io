<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>firedev.com</title>
    <description>Building the internet one site at a time
</description>
    <link>http://firedev.com/</link>
    <atom:link href="http://firedev.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 30 Oct 2016 09:41:55 +0700</pubDate>
    <lastBuildDate>Sun, 30 Oct 2016 09:41:55 +0700</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Sane Breakpoints</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/break-point.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;I see different approaches to breakpoints and responsive design.
Most of the time they are over-complicated and only making things worse.
So here&amp;#39;s mine suggestion for device breakpoints that are in touch
with reality.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And if my day keeps goin&amp;#39; this way I just might... break somethin&amp;#39; tonight&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;responsive-design&quot;&gt;Responsive design&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s recap how to we design for different devices. You define some breakpoints -
conditions where your site changes. Then you describe what changes once
conditions are met. Conditions can be pretty broad, like for example &lt;code&gt;@media print&lt;/code&gt;
that allows you to apply additional styling for printing pages. Or &lt;code&gt;min-width: 1000px&lt;/code&gt;
that allows you to target only bigger screens.&lt;/p&gt;

&lt;p&gt;Sounds easy, right? However the problem with CSS is that it give one too much
flexibility without enforcing any structure. That causes CSS bloat and leads to
unmaintainable stylesheets down the line.&lt;/p&gt;

&lt;h2 id=&quot;strict-css&quot;&gt;Strict CSS&lt;/h2&gt;

&lt;p&gt;A saner approach is to let some constraints in.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;&amp;lt;meta content=&amp;quot;width=device-width, initial-scale=1&amp;quot; name=&amp;quot;viewport&amp;quot; /&amp;gt;&lt;/code&gt; to your HTML&lt;/li&gt;
&lt;li&gt;Define breakpoints for your website and stick to them&lt;/li&gt;
&lt;li&gt;Use only &lt;code&gt;min-width&lt;/code&gt; so you are going from smaller to bigger screens&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That is pretty much it. There are some tricky parts, though.&lt;/p&gt;

&lt;p&gt;Use 1:1 viewport, this is important if you don&amp;#39;t want to pulling your hair out later.
This way you will always work with something you&amp;#39;re looking at, not a scaled version of
your website.&lt;/p&gt;

&lt;p&gt;I guess everybody is using SASS or PostCSS or something that allows you do define
CSS variables, so I won&amp;#39;t be stopping on defining variables and go straight
to the next point. Just don&amp;#39;t go overboard, you ain&amp;#39;t going to need it.&lt;/p&gt;

&lt;p&gt;CSS allows you to use &lt;code&gt;min-width&lt;/code&gt;, &lt;code&gt;max-width&lt;/code&gt; or both, plus some additional modifiers
like &lt;code&gt;orientation: portrait&lt;/code&gt; and god knows what else. However there are good parts and
there are bad parts. Some things you don&amp;#39;t have to use if you don&amp;#39;t want to
spend the rest of your live debugging the cascade.&lt;/p&gt;

&lt;p&gt;All your styles should look like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Hides element on screens bigger than $small breakpoint&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.sm-hide&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;min-width&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;small&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;devices&quot;&gt;Devices&lt;/h2&gt;

&lt;p&gt;But we can&amp;#39;t use only &lt;code&gt;min-width&lt;/code&gt;! We want out site to look best on mobile devices
We have to use &lt;code&gt;orientation: portrait&lt;/code&gt; and &lt;code&gt;landscape&lt;/code&gt;! Maybe not. Think what
is exactly you are trying to achieve?&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s ask our project manager for some specs. Some realistically formulated
requirements could be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Page should take up full width on a smaller screen&lt;/li&gt;
&lt;li&gt;Display sidebar on a larger screen, collapse it on a smaller screen&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we&amp;#39;re talking. Note that it doesn&amp;#39;t mention &lt;strong&gt;landscape&lt;/strong&gt; or &lt;strong&gt;portrait&lt;/strong&gt;.
Just introducing a general idea of &lt;strong&gt;smaller&lt;/strong&gt; and &lt;strong&gt;larger&lt;/strong&gt; screens.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s take a look at some common internet-consuming devices. And see where we can
draw a line between &lt;strong&gt;smaller&lt;/strong&gt; and &lt;strong&gt;larger&lt;/strong&gt;.
Don&amp;#39;t worry if looks a bit Apple-biased, the results are universally applicable.&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;CSS Width&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/iphone-vertical.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPhone&lt;/strong&gt; Portrait&lt;/td&gt;
&lt;td&gt;320px&lt;/td&gt;
&lt;td&gt;20rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/iphone6-vertical.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPhone 6&lt;/strong&gt; Portrait&lt;/td&gt;
&lt;td&gt;375px&lt;/td&gt;
&lt;td&gt;23.4375rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/iphonep-vertical.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPhone 6+&lt;/strong&gt; Portrait&lt;/td&gt;
&lt;td&gt;414px&lt;/td&gt;
&lt;td&gt;25.875rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/iphone-horizontal.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPhone&lt;/strong&gt; Landscape&lt;/td&gt;
&lt;td&gt;568px&lt;/td&gt;
&lt;td&gt;35.5rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/iphone6-horizontal.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPhone 6&lt;/strong&gt; Landscape&lt;/td&gt;
&lt;td&gt;667px&lt;/td&gt;
&lt;td&gt;41.6875rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/iphonep-horizontal.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPhone 6+&lt;/strong&gt; Landscape&lt;/td&gt;
&lt;td&gt;736px&lt;/td&gt;
&lt;td&gt;46rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/ipad-vertical.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPad&lt;/strong&gt; Portrait&lt;/td&gt;
&lt;td&gt;768px&lt;/td&gt;
&lt;td&gt;48rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/ipad-horizontal.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPad&lt;/strong&gt; Landscape&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;td&gt;64rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/ipadpro-vertical.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPad Pro&lt;/strong&gt; Portrait&lt;/td&gt;
&lt;td&gt;1024px&lt;/td&gt;
&lt;td&gt;64rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/macbookpro.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Macbook Pro&lt;/strong&gt; 13&amp;quot;&lt;/td&gt;
&lt;td&gt;1280px&lt;/td&gt;
&lt;td&gt;80rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/ipadpro-horizontal.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;iPad Pro&lt;/strong&gt; Landscape&lt;/td&gt;
&lt;td&gt;1366px&lt;/td&gt;
&lt;td&gt;85.375rem&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&quot;/images/devices/macbookpro.svg&quot; alt=&quot;&quot;&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;PC Notebook&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;1366px&lt;/td&gt;
&lt;td&gt;85.375rem&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;h2 id=&quot;middle-ground&quot;&gt;Middle ground&lt;/h2&gt;

&lt;p&gt;When people think about breakpoints they often imagining them as some
magical bullet that can detect if you are using an iPad.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I am referring only to &lt;code&gt;@media (min-width: $variable)&lt;/code&gt; well-behaved
breakpoints as this are the only ones you should use.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Think of a breakpoint as a fence. Like a fence it has two sides, everything
that is smaller than the specified width and everything that is equal or larger
than the specified width.&lt;/p&gt;

&lt;p&gt;In other words you can think of it as a equals or larger than equation:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.menu { folded }
@media (screen width &amp;gt;= x) {
  .menu { unfolded }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That makes me think that in most cases you could do with a single breakpoint.
Or at the very least we can start with it.  Let&amp;#39;s call it &lt;code&gt;$medium&lt;/code&gt;. Everything
on the left will be considered a &lt;strong&gt;smaller&lt;/strong&gt; screen and everything on the right
is a &lt;strong&gt;larger&lt;/strong&gt; screen.&lt;/p&gt;

&lt;p&gt;Why not name them &lt;code&gt;$desktop&lt;/code&gt;/&lt;code&gt;$tablet&lt;/code&gt;/&lt;code&gt;$mobile&lt;/code&gt;/&lt;code&gt;$whatever&lt;/code&gt;? Isn&amp;#39;t this
&lt;em&gt;semantic&lt;/em&gt;? I hear this question a lot. The reasoning usually is that it&amp;#39;s hard
to remember what is &lt;code&gt;$middle&lt;/code&gt; or &lt;code&gt;$large&lt;/code&gt;. First of all the semantics here is
meaningless. One can rotate an iPad, they can release a new device tomorrow,
and you will have to rename all your classes and whatnot. Besides, each
breakpoint is only a fence.&lt;/p&gt;

&lt;p&gt;So I propose to claim a line between vertical and horizontal iPad orientation
as a &lt;code&gt;$medium&lt;/code&gt; breakpoint. A perfect place to start moving further. By default
and until we are being viewed from the devices that is larger than &lt;code&gt;$medium&lt;/code&gt;,
and that includes: mobile phones, tablets in portrait, half of the screen -- we
display content, say, in a single column.&lt;/p&gt;

&lt;p&gt;Once our media query is triggered, for everything that is bigger than
&lt;code&gt;$medium&lt;/code&gt;: that is for example an iPad in horizontal mode, computer screens,
TV -- we display multiple columns or un-collapse the menu.&lt;/p&gt;

&lt;h2 id=&quot;other-breakpoints&quot;&gt;Other breakpoints&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s separate the devices on a smaller side of the &lt;code&gt;$medium&lt;/code&gt; so we can target
portrait and landscape modes separately. This way when somebody is looking at
your website on his phone he sees the initial styling.&lt;/p&gt;

&lt;p&gt;Once he rotates the phone - he makes a first jump over the &lt;code&gt;$small&lt;/code&gt; breakpoint
fence. Everything that is styled with &lt;code&gt;min-width: $small&lt;/code&gt; kicks in.&lt;/p&gt;

&lt;p&gt;This is what one would see the on an iPad in portrait orientation. But our
users want to see more. So they rotate the iPad (or get an iPad pro) and that
moves them over the &lt;code&gt;$medium&lt;/code&gt; breakpoint.&lt;/p&gt;

&lt;p&gt;The last one, &lt;code&gt;$large&lt;/code&gt; covers everything bigger than an iPad in Landscape. That
is the computer screen and the iPad Pro.&lt;/p&gt;

&lt;h2 id=&quot;final-results&quot;&gt;Final results&lt;/h2&gt;

&lt;p&gt;Pixel sizes are provided only for reference. You should stick to rem-based
sizes. Calculations are based on the default 16px body font size. I don&amp;#39;t
recommend using pixels. Stick to rem as this is not relative and equals body
font size. With &lt;code&gt;rem&lt;/code&gt; you can increase font size when needed and the layout
will adapt. For example, if you need to show something on an HD TV across the
room.&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$small&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$medium&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$large&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Phones Portrait&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;35rem&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Phones Landscape&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;55rem&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iPad Landscape&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;65rem&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iPad Pro Landscape&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;560px&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iPad Portrait&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;880px&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;iPad Pro Portrait&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1040px&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Notebook / Desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;p&gt;I have chosen these after some consideration, but nothing is written in stone,
you can change them as you see fit for your project. Them menu might be not
fitting in only this much or something breaks.&lt;/p&gt;

&lt;p&gt;Anyway here are the breakpoints in SCSS format, I tried to round them up a little bit:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scss&quot; data-lang=&quot;scss&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//       $small                  $medium                 $large&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Portrait | Landscape   Portrait | Landscape   Portrait | Landscape&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Phone    | Phone       iPad     | iPad        iPad Pro | iPad Pro&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$small&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 560px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$medium&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 880px&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$large&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;rem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1040px&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I believe this approach will bring more good than those obscure pixel-based breakpoints
found in CSS Frameworks everywhere. Start small, use an
&lt;a href=&quot;http://firedev.com/posts/2015/immutable-css/&quot;&gt;Immutable CSS&lt;/a&gt; library and have fun.&lt;/p&gt;

        </description>
        <pubDate>Tue, 16 Feb 2016 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2016/sane-breakpoints/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2016/sane-breakpoints/</guid>
        
        <category>CSS</category>
        
        <category>breakpoints</category>
        
        <category>frontend</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Atomic Icons</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/atomic-icons.png"/&gt;&lt;/p&gt;
          &lt;p&gt;Once in a while comes a moment when you decide to change an icon set you have
been using. Just a bit of upfront planning goes a long way. Consider a system
that turns icons into independent components.&lt;/p&gt;

&lt;p&gt;Before we start I need to explain that actual icon implementation doesn&amp;#39;t matter.
It is not important if you are using PNG, SVG, Icon Fonts or whatever there is.&lt;/p&gt;

&lt;p&gt;I personally like Font Awesome because it&amp;#39;s easy to use. Not without drawbacks
though. While icon fonts just started to be rendered somewhat consistently
across browsers there is some backlash against them. Sometimes they might not
be rendered correctly still and might cause some issues for screen reading
software.&lt;/p&gt;

&lt;p&gt;A ready to use vector set that looks okay in all resolutions and can be stacked
is indispensable. But there is another drawback with Font Awesome in
particular. It was built with 14px font size in mind. These days I tend to
not change browser defaults. And some sort of 16px base icon font would not
hurt to get crisp icons.&lt;/p&gt;

&lt;p&gt;Having said that, it seems SVG is the way to go at the moment. But enough digression let&amp;#39;s get to
business.&lt;/p&gt;

&lt;h2 id=&quot;can-we-have-icons-without-pain&quot;&gt;Can we have icons without pain?&lt;/h2&gt;

&lt;p&gt;I myself tried different approaches before coming to this. And I have endured
migrations from images to icon fonts, then from one icon font to another, then
syntax changes in font awesome. HTML, CSS, SASS, SVG, inline SVG, Icon Fonts,
Custom fonts... You name it.&lt;/p&gt;

&lt;p&gt;Each transition did lead me closer to this solution. As I am the only
maintainer of the things I make I distill everything to the simplest and most
effective form.&lt;/p&gt;

&lt;h2 id=&quot;atomic-icons&quot;&gt;Atomic Icons&lt;/h2&gt;

&lt;p&gt;Atomic composable components that do only one thing allow us to abstract from
the implementation and move forward without worrying about breaking things up.&lt;/p&gt;

&lt;p&gt;We can switch implementation (read icon sets) on the fly without headache.&lt;/p&gt;

&lt;p&gt;But there is a catch:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You create one way of displaying icons and stick to it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You do not use &lt;code&gt;@extend&lt;/code&gt; in SASS to inject icons in buttons, you don&amp;#39;t add icon
classes to &lt;code&gt;span&lt;/code&gt; or &lt;code&gt;a&lt;/code&gt;. Every icon displayed must be passing through your own
implementation.&lt;/p&gt;

&lt;p&gt;This claim might sound either trivial or ridiculous depending on your standpoint,
so let me reinforce it with some examples. I don&amp;#39;t know if you remember Font Awesome
changing their class naming from &lt;code&gt;icon-*&lt;/code&gt; to &lt;code&gt;fa fa-*&lt;/code&gt;? Or had a chance to
find all the places where you have used some &lt;code&gt;fa-circle&lt;/code&gt; that became &lt;code&gt;fa-circle-o&lt;/code&gt;?
Or spend couple of days making sure there is no single reference of &lt;code&gt;png&lt;/code&gt; or
&lt;code&gt;gif&lt;/code&gt; in the project? You need an implementation you can control.&lt;/p&gt;

&lt;h2 id=&quot;history-lesson&quot;&gt;History lesson&lt;/h2&gt;

&lt;p&gt;Before we get to the actual solution let&amp;#39;s recap how the mess creeps into
the system in the first place. Imagine an app with icon buttons:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icons/ok.gif&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; Save&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Years pass and it gets obsolete quickly. You start having dynamic buttons so
as a simplest solution you&amp;#39;re changing &lt;code&gt;src&lt;/code&gt; attributes. Then one day you&amp;#39;re
deciding that this is enough mess and move stying to CSS:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.ok&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(icons/ok.gif)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But then you need to have padding to compensate for the icon size...&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh darn it, we don&amp;#39;t have icons for all buttons. Let&amp;#39;s have a prefix! And switch to SASS:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@mixin&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;32px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;8px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;icons&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.gif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.icon-ok&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon-ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Save&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yey, almost there. Plus now we can reuse the same class for links and stuff.
But headers, icons looks comically tiny in headers? So you add bigger images
and classes for bigger icons and more padding and positioning.&lt;/p&gt;

&lt;p&gt;Time flies and now you&amp;#39;re forced to do something with this, so you decide to
change it to icon font.  With power of sass that sounds easy. Using Font
Squirrel or IcoMoon your compile your own icon font implementation.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;k&quot;&gt;@mixin&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;($&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:before&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;CustomFont&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.icon-ok&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;\#ok;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The team lead likes the effort and decides that we now need to have all icons done this way.&lt;/p&gt;

&lt;p&gt;But then your team moves to Slim or React and now you have to insert spaces everywhere icons
starts sticking to text. The CSS grows with more and more intricacies.&lt;/p&gt;

&lt;p&gt;You need to use icons separately too right? So let&amp;#39;s create another rule for &lt;code&gt;button.icon-ok&lt;/code&gt; and
&lt;code&gt;.icon-ok&lt;/code&gt; standalone. And for other icons. And other tags, because links are inline.&lt;/p&gt;

&lt;p&gt;So what can we do?&lt;/p&gt;

&lt;h2 id=&quot;icon-component&quot;&gt;Icon Component&lt;/h2&gt;

&lt;p&gt;To combat pains I have developed a system that works pretty well. Instead of
multiplying icon classes we are introducing the Icon component.&lt;/p&gt;

&lt;p&gt;It does one thing - displays an icon. Font Awesome Rails gem has a &lt;code&gt;fa_icon&lt;/code&gt; helper that does that.
But we wrap it in our own view helper, icon:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;= icon &amp;#39;remove&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In React that would be something like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Icon icon=&amp;#39;remove&amp;#39; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Output:&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-remove&quot;&gt;&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;This is it. Pure, immutable, &lt;code&gt;1em&lt;/code&gt; width and height icon. Again, implementation is irrelevant.
It can be anything as long as there is one way to call it.&lt;/p&gt;

&lt;h2 id=&quot;usage-in-buttons&quot;&gt;Usage in buttons&lt;/h2&gt;

&lt;p&gt;This simple thing frees our hands immediately. You don&amp;#39;t style buttons anymore.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-erb&quot; data-lang=&quot;erb&quot;&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;remove&amp;#39;&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;  Delete&lt;/span&gt;
&lt;span class=&quot;x&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;button&gt;&lt;i class=&quot;fa fa-remove&quot;&gt;&lt;/i&gt; Remove&lt;/button&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s see how can we use is in React component instead of &lt;code&gt;className: &amp;quot;remove&amp;quot;&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;button&amp;gt;
  &amp;lt;Icon icon=&amp;#39;remove&amp;#39; /&amp;gt;
  Delete
&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;Button icon=&amp;quot;remove&amp;quot;&amp;gt;
  Delete
&amp;lt;/Button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh wait, but why they are stuck together:&lt;/p&gt;

&lt;p&gt;&lt;button&gt;&lt;i class=&quot;fa fa-remove&quot;&gt;&lt;/i&gt;Remove&lt;/button&gt;&lt;/p&gt;

&lt;p&gt;Exactly, in some libraries, namely React and Slim, the whitespace is trimmed.
So instead of beating around the bush with non-breaking spaces and stuff I found
a simple solution that works. You get a set of three helpers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;Icon&amp;gt;&lt;/code&gt; — icon &lt;em&gt;atom&lt;/em&gt;. The minimal representation. It can be &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;, &lt;code&gt;i.fa&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;IconBefore&amp;gt;&lt;/code&gt; — icon with right spacing for use in from of the text without spaces.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;IconAfter&amp;gt;&lt;/code&gt; — icon with left spacing to be used after text&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the corresponding &lt;a href=&quot;https://github.com/firedev/basscss-fix/blob/master/app/helpers/icon_helper.rb&quot;&gt;rails helpers&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;IconHelper&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;FontAwesome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;IconHelper&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fa_icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;icon_before&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; pr1&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;icon_after&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; pl1&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While in Slim you do it like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-slim&quot; data-lang=&quot;slim&quot;&gt;&lt;span class=&quot;nt&quot;&gt;button&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon_before&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;remove&amp;#39;&lt;/span&gt;
  | Remove from
  &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;icon_after&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cloud&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I don&amp;#39;t see a point for additional verbosity in React component so it can be something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;icon=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;remove&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;iconAfter=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cloud&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  Remove from
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output should be identical. Note even whitespace:&lt;/p&gt;

&lt;p&gt;&lt;button&gt;&lt;i class=&quot;fa fa-remove pr1&quot;&gt;&lt;/i&gt;Remove from&lt;i class=&quot;fa fa-cloud pl1&quot;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/p&gt;

&lt;p&gt;What&amp;#39;s with &lt;code&gt;pr1&lt;/code&gt; &lt;code&gt;pl1&lt;/code&gt; classes? They are providing &lt;code&gt;padding-left&lt;/code&gt; and &lt;code&gt;padding-right&lt;/code&gt;. Why not &lt;code&gt;margin&lt;/code&gt;?
Because that produces an unclickable space if you are using an icon inside a link:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com/firedev&quot;&gt;&lt;i class=&quot;fa fa-github pr1&quot;&gt;&lt;/i&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;or-app-is-too-old-for-this&quot;&gt;Or app is too old for this&lt;/h2&gt;

&lt;p&gt;If you are in a transitional phase, and have some HTML or Backbone where you
can&amp;#39;t use helpers or components, replace current icons implementation with
&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tags that use your own naming scheme in css.&lt;/p&gt;

&lt;p&gt;This change alone will untie your hands and you can create icons inventor to
see which ones you&amp;#39;re actually using.&lt;/p&gt;

&lt;p&gt;Replace whatever you&amp;#39;re using at the moment:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;image-ok&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Save&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icons/ok.gif&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Save&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon-warning&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icons/exclamation-mark.gif&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt; File not found&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon-ok icon-before&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt;Save&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;what-39-s-the-point&quot;&gt;What&amp;#39;s the point?&lt;/h2&gt;

&lt;p&gt;This approach helps you to get rid of the obscure CSS. Buttons stay buttons and
decoupled from the presentation. No margins or anything. Icons are reusable
and aren&amp;#39;t tied to a particular implementation. So you can experiment with the
overall look and feel. And the best part is -- now you can compose:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://firedev.com/posts/2015/immutable-css/&quot;&gt;&lt;i class=&quot;fa fa-css3 pr1&quot;&gt;&lt;/i&gt;Immutable CSS&lt;/a&gt;&lt;br&gt;
&lt;a href=&quot;http://fontawesome.io/&quot;&gt;&lt;i class=&quot;fa fa-link pr1&quot;&gt;&lt;/i&gt;Font Awesome&lt;/a&gt;&lt;/p&gt;

        </description>
        <pubDate>Sun, 24 Jan 2016 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2016/atomic-icons/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2016/atomic-icons/</guid>
        
        <category>CSS</category>
        
        <category>react</category>
        
        <category>components</category>
        
        <category>frontend</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Immutable CSS</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/monolith.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;This is extracted from the Github issue created to discuss the approach with my
team. Please bear with me if I refer to something that wasn&amp;#39;t mentioned in the text.&lt;/p&gt;

&lt;h2 id=&quot;what-is-immutable-css&quot;&gt;What is Immutable CSS?&lt;/h2&gt;

&lt;p&gt;It&amp;#39;s a set of tiny classes that don&amp;#39;t change. You have a set of predefined
small classes that you reuse everywhere. They are mostly one-liners with clear
semantics. And you don&amp;#39;t write new CSS until it&amp;#39;s absolutely needed.&lt;/p&gt;

&lt;p&gt;Lets pretend that we need to build a menu that changes background for each client.
Consider the following example. The semantics is easy to remember: &lt;code&gt;m&lt;/code&gt; —
margin, &lt;code&gt;p&lt;/code&gt; — padding.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;&amp;lt;div class=&amp;quot;menu mb1 p1&amp;quot;&amp;gt;
  &amp;lt;img src=&amp;quot;logo.svg&amp;quot;/&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;.mb1 { margin-bottom: x } - adds bottom spacing
.p1 { padding: x } - adds padding
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;1&lt;/code&gt; in class name means &amp;#39;single spacing&amp;#39;. And you don&amp;#39;t use pixels or any
magic numbers. The spacing is based on the font size.&lt;/p&gt;

&lt;p&gt;There are more utility classes like these and HTML tags are pre-styled so you
can just use them as is.&lt;/p&gt;

&lt;h2 id=&quot;sales-pitch&quot;&gt;Sales pitch&lt;/h2&gt;

&lt;p&gt;The claim is that 90% of CSS you don&amp;#39;t have to write at all. And instead of
having tons of files and selectors one can add a bit more verbose-ish class
names that are explicitly readable when you open the code.&lt;/p&gt;

&lt;p&gt;After that styling the transparent menu is trivial:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.menu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#xxx&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;but-css-modules&quot;&gt;But CSS Modules...?&lt;/h2&gt;

&lt;p&gt;Everybody seem to have high hopes for CSS modules. Let&amp;#39;s clear this up. I am
not opposed to idea and they are great. However I would argue that CSS modules
is a file organization concept mostly. As everything is compiled into a big
pile of CSS in the browser.&lt;/p&gt;

&lt;p&gt;You&amp;#39;re not defining colors and fonts in each module, so they are not &lt;em&gt;that&lt;/em&gt;
independent. You have some &lt;em&gt;base CSS&lt;/em&gt; anyway.&lt;/p&gt;

&lt;p&gt;So in the case above the Menu CSS Module would contain a single line -
&lt;code&gt;background-color&lt;/code&gt;. Everything else is build using immutable css classes from
the BASE.&lt;/p&gt;

&lt;h2 id=&quot;show-me&quot;&gt;Show me!&lt;/h2&gt;

&lt;p&gt;Sure. Let&amp;#39;s take a random CSS Module from one of the pulls:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;70%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;composes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./../../../../form/input-container.css&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.type__select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;composes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./../../../../form/input.css&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looks like it should power this kind of HTML:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-slim&quot; data-lang=&quot;slim&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.type&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.type__select&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So you see this in your code, and to get the idea of what is going on you open
the module, then you follow the &lt;code&gt;../../..&lt;/code&gt; chain to find out that &lt;code&gt;input-container&lt;/code&gt;
is something like &lt;code&gt;margin-bottom: 10px&lt;/code&gt; and before you know it — your whole codebase
looks like this.&lt;/p&gt;

&lt;p&gt;In addition to the scss mess already in place. It&amp;#39;s just a different form of
SASS &lt;code&gt;extend&lt;/code&gt;. With inheritance, specificity and the like. Just a different
file format.&lt;/p&gt;

&lt;p&gt;Compare to the following piece of CSS:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Wait, what? No CSS? Yes. You see the basic HTML tags like &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; don&amp;#39;t need to
carry any classes. You just pre-style them once. How many variation of
&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; you need anyway?&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;.type&lt;/code&gt; that seems to be a some form of container I just put &lt;code&gt;.container&lt;/code&gt;
in HTML. &lt;code&gt;width: 70%&lt;/code&gt; is a magic number. It seems to me that it can be replaced
with &lt;code&gt;.col-8&lt;/code&gt; given 12-column grid.&lt;/p&gt;

&lt;p&gt;So in HTML it will be something like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-slim&quot; data-lang=&quot;slim&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.col-8&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;select&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And no CSS.&lt;/p&gt;

&lt;h2 id=&quot;so-it-that-another-css-framework&quot;&gt;So it that another CSS framework?&lt;/h2&gt;

&lt;p&gt;Nope, just a library. As they say - you call the library, framework calls you.
In fact it&amp;#39;s a set of css modules: &lt;code&gt;whitespace&lt;/code&gt;, &lt;code&gt;grid&lt;/code&gt;, &lt;code&gt;forms&lt;/code&gt;, etc. A dozen
one-liners each that can be reused everywhere.&lt;/p&gt;

&lt;p&gt;I made a full circle before adopting this technique exclusively. After working
with CSS, SCSS and now SASS while using Bootstrap, Foundation, various grid
systems, Neat, Bourbon and what else there is.&lt;/p&gt;

&lt;h2 id=&quot;but-how-can-we-use-it-we-already-using-whatever&quot;&gt;But how can we use it, we already using Whatever?&lt;/h2&gt;

&lt;p&gt;The approach I preach to have a library of atomic, immutable small classes that
can be combined for layout purposes. And top it off with smart reset for HTML
elements. So all inputs, buttons and whatnot looks fine as is.&lt;/p&gt;

&lt;p&gt;You only describe some specific behaviour in CSS you write. The basic styling
and positioning is done with the base classes.&lt;/p&gt;

&lt;h2 id=&quot;do-we-have-to-change-something&quot;&gt;Do we have to change something?&lt;/h2&gt;

&lt;p&gt;Start with adding small one-liners. Here are for example three one-line clases
for the menu. When you decide you need more you can continue.&lt;/p&gt;

&lt;p&gt;Here is what the HTML could look like (Slim/Jade)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-slim&quot; data-lang=&quot;slim&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.menu&lt;/span&gt;                     | Sets Colors, nothing else. The only class that needs to be defined in CSS
  &lt;span class=&quot;nc&quot;&gt;.container&lt;/span&gt;              | Sets max-width for the inner container
    &lt;span class=&quot;nc&quot;&gt;.sm-show.left.mr2&lt;/span&gt;     | Show on small screens and upwards, float left, double spacing to the right
      &lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;na&quot;&gt; src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;logo.png&amp;quot;&lt;/span&gt;

   &lt;span class=&quot;nc&quot;&gt;.dropdown&lt;/span&gt;              | Dropdown wrapper, on hover show .dropdown-hidden
      &lt;span class=&quot;nc&quot;&gt;.btn&lt;/span&gt; Purchasing     | Button-like look (transparent). Add hover effect that is font-color dependent
      &lt;span class=&quot;nc&quot;&gt;.dropdown-hidden&lt;/span&gt;    | Container for Submenu
        &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.btn&lt;/span&gt;             | Submenu itself
        &lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.btn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So the only CSS one has to write to hydrate the menu with some dynamic style (module or not):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.menu&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#xxx&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#xxx&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you don&amp;#39;t need anything dynamic, just replace &lt;code&gt;.menu&lt;/code&gt; with &lt;code&gt;.bg-blue.white&lt;/code&gt;.
And that removes CSS completely.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.btn&lt;/code&gt; class applies transparent button look by default. It inherits font and
hover color from text so it works with any kind of stuff.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; HTML tag or &lt;code&gt;.button&lt;/code&gt; class on the other hand is pre-styled as a
fully-blown button with colored background (it is actually inherited from
&lt;code&gt;.btn.btn-primary&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;what-if-we-don-39-t-like-it&quot;&gt;What if we don&amp;#39;t like it?&lt;/h2&gt;

&lt;p&gt;This is the best part, each module is like 10-20 lines long. Look at the
filesizes in the following section.  You can easily replace or recreate parts
you don&amp;#39;t like. It&amp;#39;s all built from CSS modules by the way.&lt;/p&gt;

&lt;h2 id=&quot;questions&quot;&gt;Questions?&lt;/h2&gt;

&lt;p&gt;Since I have adopted this approach I almost stopped writing css and it&amp;#39;s really
easy to work with the projects now when I don&amp;#39;t have to edit multiple files.
Another side effect is when you open the view you can &lt;em&gt;read&lt;/em&gt; what it is going
to &lt;em&gt;look&lt;/em&gt; like. Kind of like in the Matrix movie.&lt;/p&gt;

&lt;p&gt;For example the whole CSS for my &lt;a href=&quot;http://molokophuket.com&quot;&gt;wife&amp;#39;s website&lt;/a&gt; is
less then &lt;strong&gt;10Kb&lt;/strong&gt; in size. And people think this is Bootstrap.&lt;/p&gt;

&lt;p&gt;I&amp;#39;d love to show more examples, production code or answer questions. Here are
some links to digest meanwhile:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jxnblk.com/gravitons&quot;&gt;Gravitons&lt;/a&gt; — A base set of simple utilities to start with&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://basscss.com&quot;&gt;BASSCSS&lt;/a&gt; — The actual library I am suggestion to use&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/firedev/basscss-fix&quot;&gt;BASSCSS-FIX&lt;/a&gt; — Some things I wasn&amp;#39;t content with&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jxnblk.com/rebass&quot;&gt;ReBASS&lt;/a&gt; — BASSCSS-based React componets (&lt;code&gt;Row&lt;/code&gt;, &lt;code&gt;Column&lt;/code&gt;, &lt;code&gt;Button&lt;/code&gt; etc)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tachyons.io&quot;&gt;Tachyons&lt;/a&gt; — Another tiny library with similar ideas&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://solid.buzzfeed.com&quot;&gt;Solid&lt;/a&gt; — Buzzfeed implementation&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=0aBv8dsZs84&quot;&gt;Styling React Components in JavaScript&lt;/a&gt; — Embedding is disabled but the fun part starts in the second half of the video.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;boilerplate&quot;&gt;Boilerplate&lt;/h2&gt;

&lt;p&gt;This approach really shines with templating engines that use terse indented syntax. So if
you are still on the fence but willing to try it and like Slim I made
boilerplate to demo some of the ideas.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://github.com/firedev/boilerplate&quot;&gt;Slim/SASS/BASS Boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Usage is simple. You just have to have &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;bower&lt;/code&gt;, and &lt;code&gt;grunt&lt;/code&gt; installed:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install
bower install
grunt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here&amp;#39;s what you can achieve in 10 minutes time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://firedev.com/boilerplate/&quot;&gt;Page Mockup&lt;/a&gt; — Try resizing the window&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/firedev/boilerplate/blob/example/slim/index.slim&quot;&gt;Source&lt;/a&gt; — Typed it up live&lt;/li&gt;
&lt;/ul&gt;

        </description>
        <pubDate>Tue, 22 Dec 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/immutable-css/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/immutable-css/</guid>
        
        <category>CSS</category>
        
        <category>react</category>
        
        <category>components</category>
        
        <category>immutable</category>
        
        <category>frontend</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Apple Magic Keyboard, Magic Mouse 2 and Magic Trackpad 2</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/magic-keyboard-mouse-trackpad.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;Keyboard is great. Mouse is good. Trackpad is okay.&lt;/p&gt;

&lt;p&gt;Now for the longer version. I am living in Thailand and it was really easy to
order Apple products until they have removed the English version from their
website. Now it&amp;#39;s all a mess but I got through somehow. Strictly for the sake
of posting the review.&lt;/p&gt;

&lt;p&gt;This is what it looked like:&lt;/p&gt;

&lt;div style=&quot;#e6e6e6&quot;&gt;
&lt;img class=&quot;block md-col-8&quot; src=&quot;/images/posts/store-apple-com.png&quot; alt=&quot;store.apple.com&quot;/&gt;
&lt;/div&gt;

&lt;h2 id=&quot;magic-keyboard&quot;&gt;Magic Keyboard&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/magic-keyboard.jpg&quot; alt=&quot;Magic Keyboard&quot;&gt;&lt;/p&gt;

&lt;p&gt;Let me put it this way. If you are typing all day, get up
and get one of these. Skip the rest of the page.&lt;/p&gt;

&lt;p&gt;I like Apple Wired Keyboard with the additional numeric pad. Used one with Mac
Mini back in the days when I just switched to Mac. After the first generation
of Wireless keyboards was released I was quickly annoyed that they were using
3xAA batteries. If you buy batteries in packs of four, there is always an extra
one is lying around.&lt;/p&gt;

&lt;p&gt;After a couple of years Apple released 2-battery Wireless Keyboard, which made
it a little bit more bearable. But having a keyboard is only half of the deal.
You have to power it somehow. Buying a box of batteries to throw a handful away
every week or two is not something I liked neither from economical nor
ecological point of view. Plus they die when you least expect it and you don&amp;#39;t
have spare batteries.&lt;/p&gt;

&lt;p&gt;So I started to buy chargers and rechargeable batteries. I tried them all:
Duracell, Energizer, Apple, you name it. To my surprise they&amp;#39;re all crap. Apple
Chargers and Apple Batteries turned out to be the worst. I thought they are
going to last at least, but those were the ones to die first. I had two sets I
think. One charger died right away, another one is blinking its amber light not
doing anything. The batteries started to leak and get puffed after a while.
Maybe this is why they were pulled off quickly.&lt;/p&gt;

&lt;p&gt;And to tell you the truth these keyboards were not very pleasant to type on.
Okay, they are better than the most keyboards you buy. But compared to Macbooks
they were too ... &amp;quot;springy&amp;quot; (if there is such word). You have to press harder,
keys travel longer distance, there is more resistance. In the end I got some
pains in both hands and even tried some DIY anti-RSI measures that didn&amp;#39;t
improve the situation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/diy-anti-rsi-keyboard.jpg&quot; alt=&quot;DIY Anti-RSI Keyboard&quot;&gt;&lt;/p&gt;

&lt;p&gt;So the new keyboard was something I was eagerly waiting for to become available in
Thailand and ordered one the same day it got approved by the local FCC.&lt;/p&gt;

&lt;p&gt;That was a right move. Magic Keyboard is flatter, leaner and a pleasure to type
on. It produces a bit more noise but that is okay. It feels pretty much as
Macbook Air keyboard which is perfect in my book. In fact after typing on the
Magic Keyboard for about a week Macbook Pro keyboard feels too soft now.
And these wobbly keys, yuck. Something I have never noticed before.&lt;/p&gt;

&lt;p&gt;To sum it up I am very pleased with the new Magic Keyboard and can recommend it
without hesitation.&lt;/p&gt;

&lt;h2 id=&quot;magic-mouse-2&quot;&gt;Magic Mouse 2&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/magic-mouse-2.jpg&quot; alt=&quot;Magic Mouse 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;The first Magic Mouse was very nice except two things.&lt;/p&gt;

&lt;p&gt;Batteries inside weren&amp;#39;t connected securely enough and the mouse tend to
disconnect from a slight shakes. So when you were working on some intricate
piece of Photoshop and every time you lift the mouse to reposition it on the
table you had to be very careful to not hit the table too hard or the Mouse
would disconnect for a moment.&lt;/p&gt;

&lt;p&gt;The mouse &amp;quot;feet&amp;quot;, it has these two plastic rails on it&amp;#39;s belly, got shaved off
after excessive use so its belly was scratching the desk with unpleasant sound.
And in the end I tended to use it less and less.&lt;/p&gt;

&lt;p&gt;Fortunately for the mouse lovers now we have an improved version you don&amp;#39;t have
to feed batteries to. Built-in accumulators so you can shake it all you want.
And the plastic &amp;quot;feet&amp;quot; got a bit higher, plus there is no hatch on the bottom
so nothing is wobbling and so far it does not seem to touch the table where it
is not supposed to. Unfortunately sometimes you are bound to scratch the desk
with the aluminum body. This is simply unavoidable unless you are very careful.&lt;/p&gt;

&lt;p&gt;So all in all it is a good replacement, especially if you liked Magic Mouse
version one.&lt;/p&gt;

&lt;h2 id=&quot;magic-trackpad-2&quot;&gt;Magic Trackpad 2&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/magic-trackpad-2.jpg&quot; alt=&quot;Magic Trackpad 2&quot;&gt;&lt;/p&gt;

&lt;p&gt;The trackpad is a new beast and comes with Force Touch. Where do I start? The
body now flatter and shaped just like the new keyboard. The old Magic Trackpad
used micro-switches in it&amp;#39;s feet so you couldn&amp;#39;t use it on soft surfaces
without having tap-to-click enabled. The new one doesn&amp;#39;t have moving parts at
all (there is a power switch though). So theoretically it could be used for
couch surfing or controlling the new Apple TV, but I didn&amp;#39;t try either.&lt;/p&gt;

&lt;p&gt;It mimics the click with a short burst of force feedback that feels as you were
actually clicking. Good job here, hands down. It can also produce the clicking
sound which I turned off in preferences right away.&lt;/p&gt;

&lt;p&gt;Sadly, after playing with Force Touch for a few days I had to turn it off as
well. At least for now it is quite useless. Yes, you can press harder on the
face of someone you don&amp;#39;t like on Internet. Preview or rename files and do some
other stuff here and there with deeper press. But it all seemed gimmicky and
not really supported anywhere outside of Apple&amp;#39;s own applications. Plus it hits
you off-balance when you are dragging something for a longer distance and
accidentally hitting the &amp;quot;second base&amp;quot; from time to time. Did I even pressed it
hard enough before that?&lt;/p&gt;

&lt;p&gt;The other nitpick is that you can&amp;#39;t really reliably press on the very edge of
the trackpad which I found myself doing from time to time.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t get me wrong though. It is great and it&amp;#39;s like 1.5 times bigger than the
old one. To my own surprise I found myself using Trackpad almost exclusively
&lt;a href=&quot;http://firedev.com/posts/2015/mac-as-ide/&quot;&gt;when I get hands off keyboard&lt;/a&gt;.
Don&amp;#39;t think I ever reached for the mouse lately at all.&lt;/p&gt;

&lt;p&gt;It costs almost as much as the new keyboard AND the new mouse combined.
Keep that in mind if you are thinking about adding it to your arsenal. I am
sure the developers will come up with some nice ideas on how to utilize Force
Touch in the upcoming year.&lt;/p&gt;

&lt;p&gt;Right now it&amp;#39;s just what it is: good expensive touchpad.&lt;/p&gt;

&lt;h2 id=&quot;lightning&quot;&gt;Lightning&lt;/h2&gt;

&lt;p&gt;Another thing I didn&amp;#39;t mention is how the devices are being paired now. You
plug it in. And it just works. Whoa!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/keyboard-ready-to-use.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;

&lt;p&gt;This is a refreshing change after fiddling with Bluetooth pairing for the
previous generation of devices. And as a nice bonus now I have three new
Lightning cables that are known to die left and right. Wish Apple switched to
USB-C across the board though.&lt;/p&gt;

&lt;p&gt;So the bottom line is: Get the Keyboard if you do a lot of typing.
The other accessories is something for you to decide if you need them or not.&lt;/p&gt;

        </description>
        <pubDate>Wed, 04 Nov 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/apple-magic-keyboard-magic-mouse-magic-trackpad/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/apple-magic-keyboard-magic-mouse-magic-trackpad/</guid>
        
        <category>apple</category>
        
        <category>mac</category>
        
        <category>reviews</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Mac as IDE: You&#39;re using it wrong</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/ascii-keyboard-controller.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;Are you using this editor and that version control app? Think bigger. Instead
of jumping between applications or forcing yourself to an IDE use your Mac as a
system where apps work together for the greater good.&lt;/p&gt;

&lt;p&gt;The main idea is to use your environment as a single entity rather that a
collection of various application. Let me show you some tricks that help me
do the job. Basically it boils down to some simple concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Control everything from the keyboard.&lt;/li&gt;
&lt;li&gt;Limit distractions.&lt;/li&gt;
&lt;li&gt;Have a system behind the madness.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I control everything from keyboard: apps, windows. Is it faster and less
distracting if you don&amp;#39;t have to reach for mouse. And this is something Windows
got right. Mac forces you to use mouse more often. It&amp;#39;s not that much of a
problem if you are on Macbook. Trackpad is always within the reach, but still,
things could be better. Let&amp;#39;s fix them.&lt;/p&gt;

&lt;h2 id=&quot;keyboard-control&quot;&gt;Keyboard Control&lt;/h2&gt;

&lt;p&gt;First turn &lt;code&gt;Full Keyboard Access&lt;/code&gt; to &lt;code&gt;Full Control&lt;/code&gt; in &lt;code&gt;Keyboard &amp;gt; Shortcuts&lt;/code&gt;
pane of System Preferences.  Now we can switch between buttons and click
checkboxes in pop-up windows from keyboard. Not everybody knows that you can use
&lt;code&gt;Cmd-First letter of the button in popup&lt;/code&gt; as well. So you can press &lt;code&gt;Cmd-D&lt;/code&gt; to
choose &lt;code&gt;Don&amp;#39;t Save&lt;/code&gt; in Save Dialog.&lt;/p&gt;

&lt;p&gt;Enable function keys to be used as such. You will have to press &lt;code&gt;Fn&lt;/code&gt; along
with brightness and volume control but that will allow you easier reach for the
Menu bar we will hide next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/function-keys.png&quot; alt=&quot;Function Keys&quot;&gt;&lt;/p&gt;

&lt;p&gt;Hide dock with &lt;code&gt;Cmd-Opt-D&lt;/code&gt; and the menu bar in &lt;code&gt;General &amp;gt; Automatically hide
and show menu bar&lt;/code&gt;. El Capitan allows us to use almost the whole screen estate
apart from the tiny bar at the edge of the screen where hidden Dock is located.
To quickly access Menu or to have a peek at the current time you can use
&lt;code&gt;Ctrl-F2&lt;/code&gt; or &lt;code&gt;Cmd-?&lt;/code&gt;. The help shortcut &lt;code&gt;Cmd-?&lt;/code&gt; or &lt;code&gt;Cmd-Shift-/&lt;/code&gt; opens help
menu from which you can search and execute menu items available in the app.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/full-keyboard-access.png&quot; alt=&quot;Full Keyboard Access&quot;&gt;&lt;/p&gt;

&lt;p&gt;Additional shortcut to remember are: &lt;code&gt;Ctrl-F8&lt;/code&gt; to reach application icons in
Menu if you need them. And, maybe, &lt;code&gt;Ctrl-F7&lt;/code&gt; to toggle keyboard control back on
if you accidentally disable it.&lt;/p&gt;

&lt;h3 id=&quot;finder&quot;&gt;Finder&lt;/h3&gt;

&lt;p&gt;Learn Finder&amp;#39;s &lt;code&gt;Go&lt;/code&gt; menu shortcuts. It will save you a ton of time and if you
are using &lt;code&gt;Cmd-Shift-G&lt;/code&gt; to switch to a folder you can autocomplete paths using
&lt;code&gt;Tab&lt;/code&gt;. I use &lt;code&gt;Documents&lt;/code&gt;, &lt;code&gt;Desktop&lt;/code&gt;, &lt;code&gt;Download&lt;/code&gt; and &lt;code&gt;Connect to Server&lt;/code&gt;
shortcuts all the time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/finder-go.png&quot; alt=&quot;Finder Go Menu&quot;&gt;&lt;/p&gt;

&lt;p&gt;And don&amp;#39;t forget you can switch views in Finder with &lt;code&gt;Cmd-Numbers&lt;/code&gt;. However
I don&amp;#39;t think I am using anything other than &lt;code&gt;Cmd-1&lt;/code&gt; (Icons) and &lt;code&gt;Cmd-2&lt;/code&gt; (List).&lt;/p&gt;

&lt;p&gt;In other apps like Chrome or iTerm you can use &lt;code&gt;Cmd-Numbers&lt;/code&gt; to quickly switch
tabs.&lt;/p&gt;

&lt;h3 id=&quot;zoom&quot;&gt;Zoom&lt;/h3&gt;

&lt;p&gt;Another semi-hidden option in OS X is full-screen zoom. Enable it in
&lt;code&gt;Acessibility &amp;gt; Use scroll gesture to zoom&lt;/code&gt;. Leave the keyboard modifier as
&lt;code&gt;Ctrl&lt;/code&gt; and make sure &lt;code&gt;Zoom Style&lt;/code&gt; is set to &lt;code&gt;Fullscreen Zoom&lt;/code&gt;. Now you can zoom
in and out by scrolling while holding &lt;code&gt;Ctrl&lt;/code&gt;. This is very useful if you need
to make sure the pixels are in place or to show something to a person across
the room.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/keyboard-zoom.png&quot; alt=&quot;Keyboard Zoom&quot;&gt;&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t forget to disable &lt;code&gt;Smooth images&lt;/code&gt; as it blurs the zoomed in image and you can&amp;#39;t
see individual pixels clearly.&lt;/p&gt;

&lt;h3 id=&quot;karabiner-and-seil&quot;&gt;Karabiner and Seil&lt;/h3&gt;

&lt;p&gt;I use these two tiny utilities by the same developer for additional keyboard tricks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pqrs.org/osx/karabiner/&quot;&gt;Karabiner&lt;/a&gt; takes care of switching layouts
for me. I don&amp;#39;t switch &lt;em&gt;between&lt;/em&gt; layouts, I just press &lt;code&gt;Left Shift&lt;/code&gt; for English and
&lt;code&gt;Right Shift&lt;/code&gt; for Russian. So before writing code I just hit &lt;code&gt;Left Shift&lt;/code&gt; and I
am sure I am using English. This is it.&lt;/p&gt;

&lt;p&gt;Being a Vim user I have &lt;code&gt;Caps Lock&lt;/code&gt; mapped to &lt;code&gt;Ctrl&lt;/code&gt; in &lt;code&gt;Keyboard&lt;/code&gt;.
&lt;a href=&quot;https://pqrs.org/osx/karabiner/seil.html.en&quot;&gt;Seil&lt;/a&gt; adds additional mapping to
&lt;code&gt;Caps Lock&lt;/code&gt; so it serves both as &lt;code&gt;Ctrl&lt;/code&gt; when held &lt;em&gt;and&lt;/em&gt; as &lt;code&gt;Esc&lt;/code&gt; when hit once.&lt;/p&gt;

&lt;h2 id=&quot;window-management&quot;&gt;Window Management&lt;/h2&gt;

&lt;p&gt;I don&amp;#39;t minimize. I find this annoying. If there is too much clutter I simply
hide either the current app via system shortcut &lt;code&gt;Cmd-H&lt;/code&gt; or hide everything else
via &lt;code&gt;Cmd-Opt-H&lt;/code&gt; (Hide Others). Some apps might need &lt;code&gt;Cmd-0&lt;/code&gt; to show main window
after gaining focus again. If anything did not show up you can check in &lt;code&gt;Menu &amp;gt;
Window&lt;/code&gt; for the &lt;code&gt;Show Main Window&lt;/code&gt; shortcut for the given app.&lt;/p&gt;

&lt;h3 id=&quot;sizeup&quot;&gt;SizeUp&lt;/h3&gt;

&lt;p&gt;To control windows I am using
&lt;a href=&quot;http://www.irradiatedsoftware.com/sizeup/&quot;&gt;SizeUp&lt;/a&gt;. It allows me to size
windows to half, quarter, and full-screen. I move windows between screens and
center them so I can see a little bit behind around the edges of the screen.
There are many like it, but this one is the best tool for the job as I can do
everything without lifting hands from keyboard.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/size-up.png&quot; alt=&quot;SizeUp Shortcuts&quot;&gt;&lt;/p&gt;

&lt;p&gt;I am a bit biased partly because of the involvement in development process (Hi,
Steve). But mostly because SizeUp out-of-the box comes with the most settings I
agree with. The only thing I am not content with is up arrow pointing to the
upper right corner. I still think it should be the upper left.&lt;/p&gt;

&lt;p&gt;The only setting I change is 90x90% size for the &lt;code&gt;Center Window&lt;/code&gt; and maybe
disabling &lt;code&gt;Move to Space&lt;/code&gt; shortcuts.&lt;/p&gt;

&lt;p&gt;Check their website for other tiny window management apps that offer slightly
different ways.&lt;/p&gt;

&lt;h3 id=&quot;bettertouchtool&quot;&gt;BetterTouchTool&lt;/h3&gt;

&lt;p&gt;And of course &lt;a href=&quot;http://www.bettertouchtool.net/&quot;&gt;BetterTouchTool&lt;/a&gt;. This app is
indispensable. Without it the Trackpad would be only half as useful.&lt;/p&gt;

&lt;p&gt;First thing to do is to free three-finger-swipes left and right for BTT. Open
&lt;code&gt;Trackpad&lt;/code&gt; Preference Pane and change &lt;code&gt;Swipe between full-screen apps&lt;/code&gt; to &lt;code&gt;Swipe with four fingers&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we can put them to good use to switch between tabs for all applications.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/btt.png&quot; alt=&quot;BetterTouchTool&quot;&gt;&lt;/p&gt;

&lt;p&gt;Some apps require special treatment so you would have to add them separately.
For instance I have &lt;code&gt;Cmd-Shift-[&lt;/code&gt; and &lt;code&gt;Cmd-Shift-]&lt;/code&gt; mapped for Safari.&lt;/p&gt;

&lt;p&gt;It might be a bit tedious and I wish it had Dropbox sync. BTT can replace
SizeUp since it can do almost everything SizeUp does if not all. But entering a
dozen of shortcuts is not very fun task. This is why I am still using these two
apps together.&lt;/p&gt;

&lt;p&gt;Another free and open-source alternative to SizeUp:
&lt;a href=&quot;https://www.spectacleapp.com/&quot;&gt;Spectacle&lt;/a&gt;. It overrides almost system-wide
shortcuts &lt;code&gt;Cmd-Opt-Arrows&lt;/code&gt; that are used to switch tabs in most applications.
So if you are using it with BTT you will have to do some additional
fine-tuning.&lt;/p&gt;

&lt;p&gt;BetterTouchTool also adds window snapping akin to Windows&amp;#39; AeroSnap which is
pretty nice when you are feeling too lazy to reach the keyboard. Just drag a
window to a screen edge or into the corner and it gets resized accordingly.&lt;/p&gt;

&lt;p&gt;Usually I am putting windows side-by-side on a single screen. When I had two
monitors that were big enough and could be rotated vertically splitting each in
two part gave me four almost &amp;quot;virtual&amp;quot; screens.&lt;/p&gt;

&lt;p&gt;None of these apps have Menu or Dock icons enabled. I am not the most organized
or efficient person so I hide and disable everything to limit distractions and
have tidier screen. If you need to access setting - launch the app again.&lt;/p&gt;

&lt;h3 id=&quot;eyefriendly&quot;&gt;EyeFriendly&lt;/h3&gt;

&lt;p&gt;When there is not enough space on a single screen I launch
&lt;a href=&quot;http://eye-friendly.com/&quot;&gt;EyeFriendly&lt;/a&gt;.  It has only two shortcuts assigned
that allow me to switch resolutions up and down. This is really useful if I
need to see what site I am working on looks like in bigger resolution. Or if
there is not enough space to put two apps side by side comfortably.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/eye-friendly.png&quot; alt=&quot;EyeFriendly&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;app-switching&quot;&gt;App Switching&lt;/h2&gt;

&lt;p&gt;As it is the case with keyboard layouts instead of switching &lt;em&gt;between&lt;/em&gt; apps I
am switching straight &lt;em&gt;into&lt;/em&gt; the app I need. That makes the computer feel as a
whole. I have identified the apps I use most and assigned shortcuts for them. I
have tried every Shortcut app imaginable, but only one supported Dropbox sync
out-of-the box.&lt;/p&gt;

&lt;h3 id=&quot;alfred&quot;&gt;Alfred&lt;/h3&gt;

&lt;p&gt;For many the trusty butler serves as replacement for Spotlight. And I do occasional
GitHub searches from it as well. But other than that I find Spotlight pretty
adequate. &lt;a href=&quot;http://alfredapp.com&quot;&gt;Alfred&lt;/a&gt; has another important functionality
sadly available only in pricey PowerPack -- Workflows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ide/alfred.png&quot; alt=&quot;Workflows&quot;&gt;&lt;/p&gt;

&lt;p&gt;I have tried different key combos and I think &lt;code&gt;Cmd-Ctrl&lt;/code&gt; works best. So here
are the mnemonics&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-B&lt;/code&gt; — Browser (Chrome)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-G&lt;/code&gt; — Git (&lt;a href=&quot;https://rowanj.github.io/gitx/&quot;&gt;gitx-dev&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-O&lt;/code&gt; — &lt;a href=&quot;http://omnigroup.com/&quot;&gt;OmniFocus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-T&lt;/code&gt; — Terminal (&lt;a href=&quot;http://iterm2.com/&quot;&gt;iTerm&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-Q&lt;/code&gt; — SQL (&lt;a href=&quot;http://www.sequelpro.com/&quot;&gt;Sequel Pro&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-Z&lt;/code&gt; — Messages. Kind of like Un-Do, get it?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Opt-Ctrl-~12345&lt;/code&gt; — To rate music in iTunes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And &lt;code&gt;Space&lt;/code&gt; which is much too powerful is also my leader key in Vim and
I control Tmux with &lt;code&gt;Ctrl-Space&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-Space&lt;/code&gt; — Finder&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Shift-Space&lt;/code&gt; — &lt;a href=&quot;https://kapeli.com/dash&quot;&gt;Dash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Opt-Ctrl-Space&lt;/code&gt; — Alfred, it can&amp;#39;t go unassigned and I do occasional GitHub searches&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You know you can press outlined buttons in modal dialogs with &lt;code&gt;Space&lt;/code&gt;, and
preview files in Finder without opening them, right?&lt;/p&gt;

&lt;p&gt;Here is a version of the &lt;a href=&quot;http://www.packal.org/workflow/app-shortcuts&quot;&gt;App Shortcuts
Workflow&lt;/a&gt; that comes preloaded
with some variants of apps (Sublime/Atom, iTerm/Terminal, Chrome/Safari) you
can use to build your own system.&lt;/p&gt;

&lt;p&gt;Some other shortcuts are defined inside the apps that use them. I was
experimenting with double assignments so Alfred launches as app and then the
same shortcut activates the app function but it turned out to be not very
reliable.  So I have some shortcuts defined in the apps that are either
auto-started like NVAlt or that I use from time to time like Sip or
ColorSnapper before that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-C&lt;/code&gt; — Color (&lt;a href=&quot;http://www.theolabrothers.com/&quot;&gt;Sip&lt;/a&gt;/&lt;a href=&quot;http://colorsnapper.com/&quot;&gt;ColorSnapper&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Ctrl-L&lt;/code&gt; — Notational veLocity (&lt;a href=&quot;http://brettterpstra.com/projects/nvalt/&quot;&gt;NVAlt&lt;/a&gt;), too bad it&amp;#39;s not updated anymore.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Cmd-Esc&lt;/code&gt; — iTerm again. This one toggles full screen terminal window.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I have also had mappings for Textmate, Sublime and Atom, while trying to use them.
Switched to Vim since so everything is happening in terminal. I am using iTerm with
&lt;code&gt;General &amp;gt; Lion Style Fullscreen&lt;/code&gt; disabled. After that I can use &lt;code&gt;Cmd-Enter&lt;/code&gt; for true
fullscreen mode I wish other apps had.&lt;/p&gt;

&lt;h2 id=&quot;bonus&quot;&gt;Bonus&lt;/h2&gt;

&lt;p&gt;Here&amp;#39;s a cool trick that allows me to refresh Chrome without leaving the editor.
I have another shortcut in Alfred &lt;code&gt;Cmd-Opt-R&lt;/code&gt; (that has a nice system-wide ring to it).
It launches this piece of AppleScript:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;on alfred_script(q)
  tell application &amp;quot;Google Chrome&amp;quot;
    reload active tab of (get window 1)
  end tell
end alfred_script
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This little piece of code refreshes the current window in Google Chrome so you
don&amp;#39;t have to switch focus.&lt;/p&gt;

&lt;p&gt;It is especially useful if you have two screens so you can use one for editing
and refresh browser in another.&lt;/p&gt;

&lt;h2 id=&quot;conlusion&quot;&gt;Conlusion&lt;/h2&gt;

&lt;p&gt;I hope that gives the idea how everything is tied together. I jump from Mail to
Terminal, &lt;code&gt;git fetch&lt;/code&gt;, edit, jump to GitX, review changes, jump to browser,
open two apps side-by-side, edit in one window, see changes in another...&lt;/p&gt;

&lt;p&gt;This approach also give you some modularity. If you don&amp;#39;t like GitX, change it
to SourceTree. Don&amp;#39;t like Sublime, change to Atom. You can replace and fine
tune individual parts of the system but still be sure when you press
&lt;code&gt;Cmd-Ctrl-T&lt;/code&gt; you get to the terminal. Be it iTerm or Terminal or I don&amp;#39;t know
what else.&lt;/p&gt;

&lt;p&gt;So this is the staples of my day-to-day process. Please let me know if you
found anything useful and share some of your tricks.&lt;/p&gt;

        </description>
        <pubDate>Sun, 01 Nov 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/mac-as-ide/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/mac-as-ide/</guid>
        
        <category>development</category>
        
        <category>productivity</category>
        
        <category>mac</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Functional Service Objects on Rails</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/electrical_plumbing_service.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;An excellent talk &amp;quot;Blending Functional and OO Programming in Ruby&amp;quot; given by
Piotr Solnica on Full Stack Fest 2015 made me think about improving current
practices. I have tried different ways of organizing my service objects and
here is what I came up with.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;The idea is to switch from Object Oriented mentality and stateful objects to
more functional way of doing things when only data is passed through your
system.&lt;/p&gt;

&lt;p&gt;I am working on this motivational portal. Let&amp;#39;s use a concept from the project
for the sake of the example. The models involved in this example are &lt;code&gt;User&lt;/code&gt;,
  &lt;code&gt;Motivation&lt;/code&gt;, &lt;code&gt;Shop&lt;/code&gt; and &lt;code&gt;Role&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Motivation&lt;/code&gt; is some data that defines &lt;code&gt;Shop&lt;/code&gt; to which &lt;code&gt;User&lt;/code&gt; has access to in
a given month and his &lt;code&gt;Role&lt;/code&gt; in regards to that. Each month a &lt;code&gt;User&lt;/code&gt; can be
assigned to different &lt;code&gt;Shops&lt;/code&gt; and different &lt;code&gt;Roles&lt;/code&gt;. Say, an employee this
month and shop manager the next month. I call such managers &amp;quot;chief&amp;quot; since
manager was already taken.&lt;/p&gt;

&lt;h2 id=&quot;stuff-everything-into-model&quot;&gt;Stuff everything into model&lt;/h2&gt;

&lt;p&gt;For current month we need to get the list of shops user can manage. And to do
that we have to use multiple tables as there a certain roles that carry &amp;quot;chief&amp;quot;
ability. The most obvious solution is to stuff everything into User model.
So without further ado:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_shops_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;motivations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;role_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Invocation is simple:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief_shops_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hmm, that starts quite harmless. But what if we measure complexity with flog?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    10.0: flog total
    10.0: flog/method average

    10.0: User#chief_shops_for_month       -:2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;flog&quot;&gt;Flog&lt;/h3&gt;

&lt;p&gt;I use &lt;a href=&quot;http://ruby.sadi.st/Flog.html&quot;&gt;flog&lt;/a&gt; to check complexity of my classes
and strive to keep the average complexity per method under 5:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ flog app
  1278.9: flog total
     5.0: flog/method average

    29.7: User#none
    23.7: TrHelper#tr                      app/helpers/tr_helper.rb:2
    21.0: Role#none
    ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;service-class&quot;&gt;Service class&lt;/h2&gt;

&lt;p&gt;To me 10 flog per method is simply too much. We can try to break it down in two
methods like so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_shops_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief_motivation_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_motivation_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;motivations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;role_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But this is ridiculous. It adds a private method on &lt;code&gt;User&lt;/code&gt; that is calling god
knows what. Besides I don&amp;#39;t like the &amp;#39;Thin Controllers, Fat Models&amp;#39; concept. As
a one-man operation there is simply not enough man-power to deal with ten feet
long models. My motto is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Thin Everythin&amp;#39;!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I build service objects in a simple way. One public method &lt;code&gt;call&lt;/code&gt; with
occasional parameters passed from controller (i.e. variables). Let&amp;#39;s extract
the query to a what a typical service object would look like:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ChiefShopsForMonth&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:month&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;motivations_this_month_user_was_chief&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;motivations_this_month_user_was_chief&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;motivations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;role_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We keep the &lt;code&gt;User&lt;/code&gt; API unchanged so this is a true refactoring:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_shops_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ChiefShopsForMonth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What &lt;code&gt;flog&lt;/code&gt; has to say about this?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;   18.5: flog total
     4.6: flog/method average

     7.8: User::ChiefShopsForMonth#motivations_this_month_user_was_chief -:17
     6.7: User::ChiefShopsForMonth#call    -:10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, this is better. Now it&amp;#39;s time to see if we can improve further and maybe make
it more functional-ish.&lt;/p&gt;

&lt;h3 id=&quot;the-talk&quot;&gt;The talk&lt;/h3&gt;

&lt;p&gt;This is the talk &lt;a href=&quot;http://solnic.eu&quot;&gt;Piotr Solnica&lt;/a&gt; gave at Full-stack fest in 2015
that got me thinking about a better way of doing things.&lt;/p&gt;

&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/rMxurF4oqsc&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;The gist of it: Don&amp;#39;t store state. Just pass everything to &lt;code&gt;call&lt;/code&gt; method
instead. That sounded interesting. Rolled up sleeves and here we go.&lt;/p&gt;

&lt;h2 id=&quot;refactoring-service-object&quot;&gt;Refactoring Service object&lt;/h2&gt;

&lt;p&gt;Let&amp;#39;s try with full head-on solution first. I would like to throw everything in
the mix:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dependency injection&lt;/li&gt;
&lt;li&gt;Command-query separation&lt;/li&gt;
&lt;li&gt;Keyword arguments (Smalltalk-style)&lt;/li&gt;
&lt;li&gt;Intention-revealing method names&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cqs-cqrs-command-query-responsibility-segregation&quot;&gt;CQS/CQRS Command-Query Responsibility Segregation&lt;/h3&gt;

&lt;p&gt;This is a simple principle that can be boiled down to this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don&amp;#39;t modify and request data in the same method call&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Or it can be put in another way, return &lt;code&gt;self&lt;/code&gt; until the very last moment. That
allows chaining and storing the intermediate results and other interesting
things. The best examples in the wild I think are Rails scopes and JavaScript.
ActiveRecord Scopes can be chained up to the last moment where you can load the
relation into array by calling &lt;code&gt;to_a&lt;/code&gt; on it. JavaScript is basically built on
returning &lt;code&gt;this&lt;/code&gt;.  If you have ever used a JavaScript library like jQuery you
know the drill.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ChiefShopsForMonth&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;motivation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Motivation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@motivation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;motivation&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;shops&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;all_user_shops&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief_this_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:month&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:role&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:motivation&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all_user_shops&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_this_month&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;motivation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;role_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While getting here it became obvious to me that I didn&amp;#39;t have to use
&lt;code&gt;user.motivation&lt;/code&gt; as &lt;code&gt;merge&lt;/code&gt; is taking care of this. And I think by relying on
&lt;code&gt;Motivation&lt;/code&gt; class directly I can make it more intention-revealing, even if it
adds another dependency.&lt;/p&gt;

&lt;p&gt;New structure gains certain tidiness in the upper part. Now &lt;code&gt;initialize&lt;/code&gt; only
does dependency-injection for the whole object. Then &lt;code&gt;call&lt;/code&gt; sets up the
parameters and returns &lt;code&gt;self&lt;/code&gt; for chaining. You don&amp;#39;t have to return &lt;code&gt;self&lt;/code&gt;,
but that gives you flexibility so I don&amp;#39;t see a reason not to add it. And
finally you can get the list of shops for the given month by calling &lt;code&gt;.shops&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_shops_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ChiefShopsForMonth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Things get hairy however after the &lt;code&gt;private&lt;/code&gt; mark. The state moved here
and there are four attributes instead of two. Flog is not very happy about this
either.  Average complexity per method is somewhat lower, but the total is even
higher.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;   26.0: flog total
     4.3: flog/method average

     7.6: User::ChiefShopsForMonth#chief_this_month -:30
     5.0: User::ChiefShopsForMonth#shops   -:15
     5.0: User::ChiefShopsForMonth#none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;stateless-object&quot;&gt;Stateless Object&lt;/h2&gt;

&lt;p&gt;One thing I would like to discuss first. As Sandi Metz says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can break the rules if you have a good reason or your pair lets you.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;well, something along these lines at least.&lt;/p&gt;

&lt;p&gt;So I claim that I don&amp;#39;t need to inject dependenices for other ActiveRecord
classes since they are not going to change. And if they will mist likely my
service will be deleted. Thus I can get rid of &lt;code&gt;initialize&lt;/code&gt;. Of course in more
complex screnario this is not the best way to go, but this is a simple query
object so for the sake of refactoring experiment I think this will pass.&lt;/p&gt;

&lt;p&gt;I think the rule of thumb here is similar to what Piotr is suggesting:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Initialize with Service Objects you are depending on&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since I am not changing anything here, apart from the inner state of the object
and I am getting rid of the state, I don&amp;#39;t need a separate method that returns
the result. That allows me to shrink object&amp;#39;s API to single &lt;code&gt;call&lt;/code&gt; method.
Which is actually an improvement. Since now I don&amp;#39;t need to pass &lt;code&gt;user&lt;/code&gt; and
&lt;code&gt;month&lt;/code&gt; separately and they can go together as parameters in a single method
call.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ChiefShopsForMonth&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;all_user_shops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief_this_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;all_user_shops&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shops&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_this_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Motivation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;role_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chief&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see now state is not stored anywhere. Okay dependencies are not
injected which is a questionable practice. But again I claim in this case this
could pass.&lt;/p&gt;

&lt;p&gt;The invocation is almost the same as with the previous example. The only
difference is that we don&amp;#39;t have to query for shops as this is a Query Object
so it only returns result straight away. And API is effectively shrunk to a
single method.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;chief_shops_for_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ChiefShopsForMonth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes you have to call &lt;code&gt;new&lt;/code&gt;, but only to instantiate an object. Or you can still
inject dependencies for testing. As a side effect we can pass a hash as
parameter. Piotr suggests to use value object. I think it is overkill here. I
could easily pass a params hash if I wanted to, but I am afraid it might hurt
readability. And now look at this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;    10.4: flog total
     2.6: flog/method average

     5.0: User::ChiefShopsForMonth#call    -:4
     3.4: User::ChiefShopsForMonth#chief_this_month -:14
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The whole class is almost as simple as the original single method in &lt;code&gt;User&lt;/code&gt;. It
encapsulates everything it needs. It doesn&amp;#39;t pollute models with methods that
would never be used from other places. And has intention-revealing name and
simple single-method API.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;These are just some ideas on how to approach refactoring of fat models and fat
controllers. Please let me know if you think something could be improved.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

        </description>
        <pubDate>Sat, 17 Oct 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/functional-service-objects-on-rails/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/functional-service-objects-on-rails/</guid>
        
        <category>ruby</category>
        
        <category>rails</category>
        
        <category>refactoring</category>
        
        <category>functional</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Making Bottomless Hash Ruby Gem</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/bottomless_pit_gravity_falls.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;After creating &lt;a href=&quot;http://firedev.com/2015/bottomless-ruby-hash&quot;&gt;Bottomless Hash&lt;/a&gt;
last time and writing tests the next logical step is to make a Gem out of it.&lt;/p&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;p&gt;First things first. Let&amp;#39;s see if the name is not taken.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ gem search bottomless_hash

*** REMOTE GEMS ***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Looks good, now generate a template and an empty git repo to have less typing.
We&amp;#39;ll use RSpec, since I already have tests written.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;gem                                                                                                                                                            &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt; ↵
Usage:
  bundle gem GEM &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OPTIONS&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

Options:
  -b, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--bin&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-bin&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;            &lt;span class=&quot;c&quot;&gt;# Generate a binary for your library.&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--coc&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-coc&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;            &lt;span class=&quot;c&quot;&gt;# Generate a code of conduct file. Set a default with `bundle config gem.coc true`.&lt;/span&gt;
  -e, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--edit&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;EDITOR&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;                &lt;span class=&quot;c&quot;&gt;# Open generated gemspec in the specified editor (defaults to $EDITOR or $BUNDLER_EDITOR)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--ext&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-ext&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;            &lt;span class=&quot;c&quot;&gt;# Generate the boilerplate for C extension code&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--mit&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-mit&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;            &lt;span class=&quot;c&quot;&gt;# Generate an MIT license file. Set a default with `bundle config gem.mit true`.&lt;/span&gt;
  -t, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--test&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rspec&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;                 &lt;span class=&quot;c&quot;&gt;# Generate a test directory for your library, either rspec or minitest. Set a default with `bundle config gem.test rspec`.&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-color&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-no-color&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Disable colorization in output&lt;/span&gt;
  -r, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--retry&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NUM&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;                  &lt;span class=&quot;c&quot;&gt;# Specify the number of times you wish to attempt network commands&lt;/span&gt;
  -V, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--verbose&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;--no-verbose&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# Enable verbose output mode&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Create a Ruby Gem skeleton with RSpec as a test runner.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ bundle gem bottomless_hash -t=rspec
Creating gem &amp;#39;bottomless_hash&amp;#39;...
Do you want to include a code of conduct in gems you generate?
Codes of conduct can increase contributions to your project by contributors who prefer collaborative, safe spaces. You can read more about the code of conduct at contributor-covenant.org. Having a code of conduct means agreeing to the responsibility of enforcing it, so be sure that you are prepared to do that. For suggestions about how to enforce codes of conduct, see bit.ly/coc-enforcement. y/(n): y
Code of conduct enabled in config
Do you want to license your code permissively under the MIT license?
This means that any other developer or company will be legally allowed to use your code for free as long as they admit you created it. You can read more about the MIT license at choosealicense.com/licenses/mit. y/(n): y
MIT License enabled in config
      create  bottomless_hash/Gemfile
      create  bottomless_hash/.gitignore
      create  bottomless_hash/lib/bottomless_hash.rb
      create  bottomless_hash/lib/bottomless_hash/version.rb
      create  bottomless_hash/bottomless_hash.gemspec
      create  bottomless_hash/Rakefile
      create  bottomless_hash/README.md
      create  bottomless_hash/bin/console
      create  bottomless_hash/bin/setup
      create  bottomless_hash/CODE_OF_CONDUCT.md
      create  bottomless_hash/LICENSE.txt
      create  bottomless_hash/.travis.yml
      create  bottomless_hash/.rspec
      create  bottomless_hash/spec/spec_helper.rb
      create  bottomless_hash/spec/bottomless_hash_spec.rb
Initializing git repo in gems/bottomless_hash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have included all this licences and codes of conduct as some people are
very sensitive to this and will email you asking if they can change your
code if you won&amp;#39;t include any of these.&lt;/p&gt;

&lt;p&gt;Okay it is quite a handful so I&amp;#39;ll publish it on GitHub.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin git@github.com:firedev/bottomless_hash.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push -u origin master
Counting objects: 21, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Delta compression using up to &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; threads.
Compressing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;18/18&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Writing objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;21/21&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 4.75 KiB &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; bytes/s, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Total &lt;span class=&quot;m&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, reused &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
To git@github.com:firedev/bottomless_hash.git
 * &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;new branch&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;      master -&amp;gt; master
 Branch master &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;up to track remote branch master from origin.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Great now let&amp;#39;s get to business.&lt;/p&gt;

&lt;h2 id=&quot;filling-up-the-blanks&quot;&gt;Filling up the blanks&lt;/h2&gt;

&lt;p&gt;There is a bunch of files but for now we just need to fill up
&lt;code&gt;bottomless_hash.gemspec&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# coding: utf-8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../lib&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vg&quot;&gt;$LOAD_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unshift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;vg&quot;&gt;$LOAD_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bottomless_hash/version&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Gem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Specification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bottomless_hash&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;authors&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Nick Ostrovsky&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;nick@firedev.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%q{Ruby Hash modified to accept keys blindly}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%q{Is there a way to blindly assign nested values to a&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;                          Ruby hash without creating each key’s hash separately? Yes, but it’s more&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;                          involved than you’d think.}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;homepage&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://github.com/firedev/bottomless_hash&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;license&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;MIT&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# Prevent pushing this gem to RubyGems.org by setting &amp;#39;allowed_push_host&amp;#39;, or&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# delete this section to allow pushing this gem to any host.&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# if spec.respond_to?(:metadata)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#   spec.metadata[&amp;#39;allowed_push_host&amp;#39;] = &amp;quot;TODO: Set to &amp;#39;http://mygemserver.com&amp;#39;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# else&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#   raise &amp;quot;RubyGems 2.0 or newer is required to protect against public gem pushes.&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`git ls-files -z`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\x0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;%r{^(test|spec|features)/}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bindir&lt;/span&gt;        &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;exe&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executables&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;%r{^exe/}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;require_paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;lib&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_development_dependency&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bundler&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~&amp;gt; 1.10&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_development_dependency&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rake&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;~&amp;gt; 10.0&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_development_dependency&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rspec&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;#39;ll do it. I just commented out the part about not letting this gem to be
pushed to public repos. RSpec development dependency is already injected so I
guess we are good to go.&lt;/p&gt;

&lt;h2 id=&quot;add-the-meat-not-the-heat&quot;&gt;Add the meat, not the heat&lt;/h2&gt;

&lt;p&gt;Now let us add the actual files. If you take a look Ruby gems are following the
simple structure.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;lib/gem_name.rb
lib/gem_name/
lib/gem_name/version.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file in lib is required by default, &lt;code&gt;version.rb&lt;/code&gt; is a single constant,
everything else is up to you.&lt;/p&gt;

&lt;p&gt;The common way of structuring stuff is to put everything in the &lt;code&gt;lib/gem_name&lt;/code&gt;
and require from &lt;code&gt;lib/gem_name.rb&lt;/code&gt; that makes everything a bit tidier. But we have
nothing to hide so let&amp;#39;s put everything from the
&lt;a href=&quot;https://gist.github.com/firedev/9de91e245f70c2e963e4&quot;&gt;GitHub gist&lt;/a&gt;
into &lt;code&gt;lib/bottomless_hash.rb&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# lib/bottomless_hash.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;bottomless_hash/version&amp;quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BottomlessHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bottomless&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And don&amp;#39;t forget specs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# spec/bottomless_hash&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;spec_helper&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;has a version number&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;not_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;does not raise on missing key&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns an empty value on missing key&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_empty&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stores and returns keys&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#from_hash&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;existing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;described_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns old hash values&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;provides a bottomless version&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_empty&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stores and returns new values&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;converts nested hashes as well&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now lets run it. You will see some errors, stemming from the fact that
&lt;code&gt;version.rb&lt;/code&gt; thinks &lt;code&gt;BottomlessHash&lt;/code&gt; is a module. We could wrap everything up
in the module, but I don&amp;#39;t have any good ideas for naming. So let&amp;#39;s just patch
the things up quickly.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# lib/bottomless_hash/version.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BottomlessHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1.0&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A little bit ugly but okay.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rspec

BottomlessHash
  has a version number
  does not raise on missing key
  returns an empty value on missing key
  stores and returns keys
  &lt;span class=&quot;c&quot;&gt;#from_hash&lt;/span&gt;
    returns old &lt;span class=&quot;nb&quot;&gt;hash &lt;/span&gt;values
    provides a bottomless version
    stores and returns new values
    converts nested hashes as well

Finished in 0.00668 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files took 0.12033 seconds to load&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; examples, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; failures
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay that part went fine. Commit and push to Github. It might
be a bit too verbose for the purpose of this post, but by
documenting everything so I can use it later.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s add another test to make sure Ruby &lt;code&gt;Hash&lt;/code&gt; class gets patched as well.
This time we would have to require &lt;code&gt;BottomlessHash&lt;/code&gt; as &lt;code&gt;spec_helper&lt;/code&gt; would
not be able to infer it&amp;#39;s name from the spec file.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# spec/hash_spec.rb&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;require_relative&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;../lib/bottomless_hash&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;existing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottomless&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;is a BottomlessHash now&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns values for existing keys&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;bottomlessly stores values&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:omg&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:omg&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;does not raise error on missing keys&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Another pass and we&amp;#39;re good to go.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rspec spec/hash_spec.rb

Hash
  is a BottomlessHash now
  returns values &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; existing keys
  bottomlessly stores values
  does not raise error on missing keys

Finished in 0.00285 seconds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;files took 0.09323 seconds to load&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; examples, &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; failures
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let&amp;#39;s add some docs and publish.&lt;/p&gt;

&lt;h2 id=&quot;publishing&quot;&gt;Publishing&lt;/h2&gt;

&lt;p&gt;After getting an account on &lt;a href=&quot;http://rubygems.org&quot;&gt;RubyGems&lt;/a&gt; it is simple.&lt;/p&gt;

&lt;p&gt;First you have to build a gem.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem build bottomless_hash.gemspec                                                                                                    &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; ↵
WARNING:  open-ended dependency on rspec &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0, development&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is not recommended
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; rspec is semantically versioned, use:
    add_development_dependency &lt;span class=&quot;s1&quot;&gt;&amp;#39;rspec&amp;#39;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&amp;#39;~&amp;gt; 0&amp;#39;&lt;/span&gt;
WARNING:  See http://guides.rubygems.org/specification-reference/ &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;help&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;  &lt;/span&gt;Successfully built RubyGem
  Name: bottomless_hash
  Version: 0.1.0
  File: bottomless_hash-0.1.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay it worked but I&amp;#39;d like to get rid of the warning, so I change the line in
&lt;code&gt;.gemspec&lt;/code&gt; as suggested.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-diff&quot; data-lang=&quot;diff&quot;&gt;$ git diff
&lt;span class=&quot;gh&quot;&gt;diff --git a/bottomless_hash.gemspec b/bottomless_hash.gemspec&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;index b0a7bb7..817054f 100644&lt;/span&gt;
&lt;span class=&quot;gd&quot;&gt;--- a/bottomless_hash.gemspec&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+++ b/bottomless_hash.gemspec&lt;/span&gt;
&lt;span class=&quot;gu&quot;&gt;@@ -31,5 +31,5 @@ Gem::Specification.new do |spec|&lt;/span&gt;

   spec.add_development_dependency &amp;quot;bundler&amp;quot;, &amp;quot;~&amp;gt; 1.10&amp;quot;
   spec.add_development_dependency &amp;quot;rake&amp;quot;, &amp;quot;~&amp;gt; 10.0&amp;quot;
&lt;span class=&quot;gd&quot;&gt;-  spec.add_development_dependency &amp;quot;rspec&amp;quot;&lt;/span&gt;
&lt;span class=&quot;gi&quot;&gt;+  spec.add_development_dependency &amp;quot;rspec&amp;quot;, &amp;quot;~&amp;gt; 0&amp;quot;&lt;/span&gt;
 end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem build bottomless_hash.gemspec
  Successfully built RubyGem
  Name: bottomless_hash
  Version: 0.1.0
  File: bottomless_hash-0.1.0.gem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now the gem is built without warnings. And we can push it to RubyGems.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem push bottomless_hash-0.1.0.gem
Enter your RubyGems.org credentials.
Don&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;t have an account yet? Create one at https://rubygems.org/sign_up
   Email:   nick@firedev.com
Password:

Signed in.

Pushing gem to https://rubygems.org...
Successfully registered gem: bottomless_hash &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.1.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is it. The gem is published and you can use it right away:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem search bottomless_hash

*** REMOTE GEMS ***

bottomless_hash &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.1.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; &lt;a href=&quot;http://firedev.com/posts/2015/bottomless-ruby-hash&quot;&gt;Bottomless Ruby Hash&lt;/a&gt;&lt;br&gt;
&lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; &lt;a href=&quot;http://firedev.com/posts/2015/making-bottomless-hash-ruby-gem/&quot;&gt;Making Bottomless Hash Ruby Gem&lt;/a&gt;&lt;br&gt;
&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt; Github &lt;a href=&quot;https://github.com/firedev/bottomless_hash&quot;&gt;firedev/bottomless_hash&lt;/a&gt;&lt;br&gt;
&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt; Gist &lt;a href=&quot;https://gist.github.com/firedev/9de91e245f70c2e963e4&quot;&gt;bottomless_hash.rb&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

        </description>
        <pubDate>Sat, 10 Oct 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/making-bottomless-hash-ruby-gem/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/making-bottomless-hash-ruby-gem/</guid>
        
        <category>ruby</category>
        
        <category>gem</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Bottomless Ruby Hash</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/bottomless_pit.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;The other day somebody asked if there is a way to blindly assign nested values
to Ruby Hash without creating each key. Turns out there is, and it has an
interesting side-effect. Welcome Bottomless Hash.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s try assigning &amp;#39;through&amp;#39; a key in plain old Ruby first.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:russia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;NoMethodError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`[]=&amp;#39; for nil:NilClass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, it doesn&amp;#39;t work like this. Fortunately Hashes in Ruby can be initialized
with a default value. First thing to try seems quite obvious. Let&amp;#39;s put an
empty hash as a default value.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:russia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:russia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Seems legit. But let&amp;#39;s dig a little deeper.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangkok&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Why is it empty? Let&amp;#39;s add more stuff to it.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:underworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:hell&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:underworld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:hell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What is going on? Some wicked magic? Not quite. First the &lt;code&gt;:world&lt;/code&gt; key was initialized
with the same empty Hash that we put as a default value. It is easy to access still,
since the same Hash is returned when the key is empty. However now all our cities
are available in both worlds.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:bangkok&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:underworlds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:russia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, we got to fix it. To initialize new hash for values we need to pass a block.
Block accepts two variables - the &lt;code&gt;hash&lt;/code&gt; itself and the &lt;code&gt;key&lt;/code&gt; it was accessed with.
Lets just inject new empty hash as a value for the key.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]=&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:phuket&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:phuket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Amazing. Okay but what if we need to add another level?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:asia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangkok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chao_praya&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;NoMethodError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`[]=&amp;#39; for nil:NilClass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oh no, not again. What can we do? Let&amp;#39;s add another layer! So the nested Hash
could in turn create more hashes:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;hash0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hash1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;hash1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:asia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:moscow_river&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It works! But what if the rabbit hole is &lt;em&gt;even&lt;/em&gt; deeper?&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:asia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangkok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:river&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:chao_praya&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;NoMethodError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`[]=&amp;#39; for nil:NilClass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, have to solve this once and for all. Let&amp;#39;s throw some functional
programming in the mix and see where it takes us. What we need is a kind of
procedure that would return a new hash with the same procedure hidden inside
waiting for an empty key to come in.&lt;/p&gt;

&lt;p&gt;What would such procedure look like? Quite familiar in fact. We just need to
pack it with &lt;code&gt;&amp;amp;&lt;/code&gt; symbol-to-proc pretzel to shove into Hash initializer.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;procedure&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;procedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;procedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:russia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:moscow_river&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:russia&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:moscow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:moscow_river&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay, that part is solved, now lets tie it a little tighter so we don&amp;#39;t need to
create lambda beforehand. Ruby Hash sports &lt;code&gt;default_proc&lt;/code&gt; method that can
be used to access the block hash was initialized with. Thank makes it super sweet,
thanks Pavel for pointing me on that.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default_proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangkok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:world&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:thailand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangkok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:bangna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}}}}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is sweet, but what is the practical point of bottomless hash? Interesting
side-effect is that it never fails you when reading values.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:dont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:know&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the beauty of this is that you can merge any hash with it to produce
a bottomless version. So you can blindly access the keys.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;unknown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bottomless&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bottomless&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No matter how long the chain is, bottomless hash won&amp;#39;t raise an error. Okay, it returns
and empty hash instead of &lt;code&gt;nil&lt;/code&gt;, which is truthy. But this can be checked with
&lt;code&gt;empty?&lt;/code&gt; even in plain ruby.&lt;/p&gt;

&lt;p&gt;As it was mentioned in comments we can encapsulated the behaviour into a Class that would
return an empty Bottomless hash or convert a given hash into a bottomless version:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BottomlessHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And some tests for the good night sleep:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BottomlessHash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bottomless&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;described_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;does not raise on missing key&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns an empty value on missing key&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_empty&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stores and returns keys&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#from_hash&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;existing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;described_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;returns old hash values&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:hello&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;provides a bottomless version&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be_empty&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;stores and returns new values&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:value&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;converts nested hashes as well&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:existing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:missing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raise_error&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And an ActiveSupport-like extension for the Hash class so you can call &lt;code&gt;.bottomless&lt;/code&gt; on
any hash in the system. Thanks Patrick!&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hash&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bottomless&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;BottomlessHash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hope this little experiment might get useful for data processing or when dealing with unknown
nested structures from the outside world.&lt;/p&gt;

&lt;h3 id=&quot;links&quot;&gt;Links&lt;/h3&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; &lt;a href=&quot;http://firedev.com/posts/2015/bottomless-ruby-hash&quot;&gt;Bottomless Ruby Hash&lt;/a&gt;&lt;br&gt;
&lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; &lt;a href=&quot;http://firedev.com/posts/2015/making-bottomless-hash-ruby-gem/&quot;&gt;Making Bottomless Hash Ruby Gem&lt;/a&gt;&lt;br&gt;
&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt; Github &lt;a href=&quot;https://github.com/firedev/bottomless_hash&quot;&gt;firedev/bottomless_hash&lt;/a&gt;&lt;br&gt;
&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt; Gist &lt;a href=&quot;https://gist.github.com/firedev/9de91e245f70c2e963e4&quot;&gt;bottomless_hash.rb&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

        </description>
        <pubDate>Wed, 07 Oct 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/bottomless-ruby-hash/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/bottomless-ruby-hash/</guid>
        
        <category>ruby</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Lazy image creation with Carrierwave</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/lazy-image-creation-with-carrierwave.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;I don&amp;#39;t know about you but I kind of grown to like Carrierwave. Yes, there are
other uploaders on the block but that&amp;#39;s not the point. Everybody I know are using
it wrong.&lt;/p&gt;

&lt;p&gt;If you are storing images on your own server I bet you are always concerned about
versions. Let&amp;#39;s say for an average web site you need at least three versions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Featured: Big cropped wide screen image for heading&lt;/li&gt;
&lt;li&gt;Default: Smaller image for gallery&lt;/li&gt;
&lt;li&gt;Thumb: Thumbnail for the list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are just for the sake of the example but there could be more. And  for
each image you need only a subset of versions. Only one image per article is
displayed as a featured image, not every image goes to gallery etc.
But you create them all anyway, because that&amp;#39;s how it is.&lt;/p&gt;

&lt;h2 id=&quot;stop&quot;&gt;Stop&lt;/h2&gt;

&lt;p&gt;You&amp;#39;re doing it wrong. While versions creation is indeed the
Carrierwave&amp;#39;s responsibility, the decision on which version to create should
not be made when image is uploaded. And certainly you don&amp;#39;t need to create all
versions at the same time or check if the file exists.&lt;/p&gt;

&lt;p&gt;Come to think of it, you don&amp;#39;t know upfront what version you might need so you
create all possible versions or create some inventive schemes with conditional
versioning thanks to Carrierwave abilities.&lt;/p&gt;

&lt;p&gt;But in fact there is a better way. Lazily create only the versions that are
actually being used just-in-time when the request comes.&lt;/p&gt;

&lt;h2 id=&quot;hammer-time&quot;&gt;Hammer time&lt;/h2&gt;

&lt;p&gt;Okay let&amp;#39;s roll our sleeves. The idea is to create the route matching
the image path. If the asset is missing the request falls through to Rails and
image is created. Next time the request comes to this url, nginx takes care of
serving the static asset.&lt;/p&gt;

&lt;p&gt;To start off let&amp;#39;s delay the versions creation until the moment we actually need
them. Let&amp;#39;s add the &lt;code&gt;now&lt;/code&gt; modifier to uploader and make sure no versions are
created until we say so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/uploaders/image_uploader.rb&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:now?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:featured&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:now?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:thumb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:now?&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;now&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@now&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;protected&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;now?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@now&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;Image&lt;/code&gt; class we are going to add a method that actually creates a version.
All it does - sets &lt;code&gt;@now&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and then calls &lt;code&gt;recreate_versions!&lt;/code&gt; for a
given &lt;code&gt;version&lt;/code&gt;. Lazy, not crazy, we don&amp;#39;t want to create anything
uncontrollably.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/image.rb&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recreate_versions!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I am using almost the out of the box uploader with the small addition.
Here is an inflector that breaks long id strings so you don&amp;#39;t end up with too
many images in one folder.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# lib/inflector.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Inflector&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slice!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# spec/lib/inflector_spec.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;spec_helper&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Inflector&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inflect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Inflector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;specify&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflect&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflect&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;10&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflect&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1/100&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflect&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1/0/1000&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflect&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1/0/0/10000&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inflect&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100_000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1/0/0/0/100000&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here is the &lt;code&gt;store_dir&lt;/code&gt; from &lt;code&gt;image_uploader.rb&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/uploaders/image_uploader.rb&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;store_dir&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;uploads/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;underscore&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Inflector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&amp;#39;s write a routing test to make sure requests are landing right at our
&lt;code&gt;MissingController&lt;/code&gt;. Missing like &amp;quot;image is missing&amp;quot;. And test a couple of routes
with and without inflected paths just to be sure:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# spec/routing/missing_spec.rb&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;rails_helper&amp;#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Routes&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:routing&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;describe&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Missing Image&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;specify&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/uploads/image/40/thumb_5f5e5c3b-a665-494c-9c21-be82d49f6451.jpg&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;show&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;image&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;40&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;thumb&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;5f5e5c3b-a665-494c-9c21-be82d49f6451&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;jpg&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;specify&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/uploads/image/1/0/1003/featured_c3ad3865-93f0-4032-a6fe-5c2ada381456.JPG&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;route_to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;missing&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;show&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;image&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;inflection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1/0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;1003&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;featured&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;c3ad3865-93f0-4032-a6fe-5c2ada381456&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;JPG&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Okay now it&amp;#39;s time to make a route. Fortunately we can use constraints to make
matters easier for everybody. Rails doesn&amp;#39;t have to think how to parse it and
here is what I came up with:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# config/routes.rb&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# /uploads/block/image/1/default_7fd5acc8-5c06-4dcc-955e-f4fc5f76be01.jpg&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;uploads/:klass/(*inflection)/:id/(:version)_(:file)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;missing#show&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;constraints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\D*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# anything but numbers&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\d*/&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;# numbers only&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the &lt;code&gt;MissingController&lt;/code&gt; itself:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/controllers/missing_controller.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MissingController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PATH_INFO&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_version&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_version&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;image&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constantize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;version&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_sym&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All it does - creates a version according to &lt;code&gt;params&lt;/code&gt; and once image is created
the same url is being requested again. But this time the created image will be
served by nginx on top of the Rails app.&lt;/p&gt;

&lt;h2 id=&quot;nginx&quot;&gt;Nginx&lt;/h2&gt;

&lt;p&gt;If you have any special settings for static files in &lt;code&gt;uploads&lt;/code&gt; folder you might
want to amend your nginx config for the given site like so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;; /etc/nginx/sites-available/site

location ^~ /uploads/ {
    ...
    try_files $uri @backend;
}

location @backend {
      proxy_pass ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;broken-images&quot;&gt;Broken Images&lt;/h2&gt;

&lt;p&gt;Say you have some broken images that can&amp;#39;t be recreated and causing errors. Let&amp;#39;s
get rid of them automatically. Via some augmentation of our &lt;code&gt;MissingController&lt;/code&gt;
we can do that now.&lt;/p&gt;

&lt;p&gt;I would suggest to add some default &amp;quot;broken&amp;quot; image to
&lt;code&gt;/assets/images/layout/missing_image.png&lt;/code&gt;
so you can see any sign that the image is deleted. Then we are changing the &lt;code&gt;show&lt;/code&gt; method:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/controller/missing_controller.rb&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MissingController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;

  &lt;span class=&quot;no&quot;&gt;EXCEPTIONS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;Errno&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENOENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Original Image not found&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;CarrierWave&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ProcessingError&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# Image is broken&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;PATH_INFO&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_version&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;EXCEPTIONS&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;destroy&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;helpers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asset_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;layout/missing_image.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_version&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;image&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;camelize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constantize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;version&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_sym&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you have fast upload, delayed image creation and the nice part is that you
can delete the whole &lt;code&gt;uploads&lt;/code&gt; folder. Versions will be re-created.
You can change formats on-the-fly when design changes. Broken files will be
automatically deleted as well. In other words -- you don&amp;#39;t need to worry about images.&lt;/p&gt;

&lt;p&gt;This is pretty much the complete implementation taken out of one of the projects I
am working on. Please let me know if that helped you. Thanks.&lt;/p&gt;

        </description>
        <pubDate>Tue, 30 Jun 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/lazy-image-creation-with-carrierwave/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/lazy-image-creation-with-carrierwave/</guid>
        
        <category>rails</category>
        
        <category>carrierwave</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Refactoring with map, pluck and select in Ruby on Rails</title>
        <description>
          &lt;p&gt;&lt;img src="http://firedev.com/images/posts/plucking_prohibited.jpg"/&gt;&lt;/p&gt;
          &lt;p&gt;If you need to get something out of the database, consider using &lt;code&gt;pluck&lt;/code&gt; to avoid
creating instances you don&amp;#39;t need.&lt;/p&gt;

&lt;p&gt;I am working with an old code base at the moment and do a lot of refactoring.
That provides me with something to think about every day.&lt;/p&gt;

&lt;p&gt;In this particular code base I see a lot of transformation of database objects
in Ruby, but is that effective?
Let&amp;#39;s check and see if we can improve anything.&lt;/p&gt;

&lt;h2 id=&quot;experiment&quot;&gt;Experiment&lt;/h2&gt;

&lt;p&gt;Before venturing off let&amp;#39;s create a test bench to measure performance:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Benchmark&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;times&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;yield&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And compare &lt;code&gt;pluck&lt;/code&gt; with &lt;code&gt;map&lt;/code&gt; on this particular piece of code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stock_movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:product_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;265&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;032&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stock_movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:product_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;220&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;282&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We see almost no difference, so what&amp;#39;s the point? But performance depends on other factors.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;stock_movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let&amp;#39;s try it with something more substantial:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;stock_movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stock_movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:product_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5647&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;272&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stock_movement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:product_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;349&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;746&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, we&amp;#39;re talking, but in fact we&amp;#39;re not.
This code is used once in the controller, and it might be that there is no
actual performance benefit especially when using small amount of data:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@stock_movement_positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:product_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2367&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;685&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@stock_movement_positions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:product_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;367&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;844&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You have to be especially careful inside of the loops. This is not a rule of the thumb
but when dealing with database I would conside using &lt;code&gt;pluck&lt;/code&gt;. Or &lt;code&gt;select&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;select&lt;/code&gt; is a different beast. Affected by Rails Magic it can act differently
things depending on its position in &lt;code&gt;ActiveRecord&lt;/code&gt; chain. Plus there are different
flavors of &lt;code&gt;select&lt;/code&gt; in &lt;code&gt;ActiveRecord::Association::CollectionProxy&lt;/code&gt;, &lt;code&gt;ActiveRecord::QueryMethods&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;What is important to rememeber is that &lt;code&gt;select&lt;/code&gt; might return instanciated real-only objects
with paritally filled attributes. It can also return a sub-query, but that&amp;#39;s another topic.
Armed with this knowlegde, let&amp;#39;s find a better specimen for refactoring.&lt;/p&gt;

&lt;h2 id=&quot;a-better-example&quot;&gt;A better example&lt;/h2&gt;

&lt;p&gt;Here is a good candidate for improvement I stumbled upon in a few places.
It returns an array of first letters in names in collection to build and alphabetic
lister later.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;StockProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;LEFT(name, 1) as letter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:letter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What immediately grabs attention is how database output that ends at &lt;code&gt;.all&lt;/code&gt; being treated in Ruby.
Let&amp;#39;s look at &lt;code&gt;select&lt;/code&gt; first:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;StockProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;LEFT(name, 1) as letter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_sql&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;SELECT LEFT(name, 1) as letter FROM `stock_products` &amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The query does not look particulary mean or anything, again, especially if your
database is not that big. Unfortunately for us &lt;code&gt;select&lt;/code&gt; instantiates a bunch of
half-filled (or half-empty) objects:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;#&amp;lt;StockProduct &amp;gt;, #&amp;lt;StockProduct &amp;gt;, #&amp;lt;StockProduct &amp;gt;, ...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is unacceptable, lets rewrite this using &lt;code&gt;pluck&lt;/code&gt; instead of &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;DISTINCT&lt;/code&gt; instead of &lt;code&gt;uniq&lt;/code&gt; and throw away the rest:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;StockProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DISTINCT LEFT(name, 1)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another thing to keep in mind when using &lt;code&gt;pluck&lt;/code&gt; - it returns the array and
breaks the &lt;code&gt;ActiveRecord&lt;/code&gt; query method chain. And if you need to use the values
in a subsequent query you might be actually needing &lt;code&gt;select&lt;/code&gt; as it would
construct a subquery to use. But in our case we don&amp;#39;t need anything else so that&amp;#39;s fine.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s compare:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;StockProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DISTINCT LEFT(name, 1)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;926&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;424&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;StockProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;LEFT(name, 1) as letter&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:letter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28469&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;013&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, something good comes out of this refactoring. Moving the code to concern:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/concerns/search/first_letter.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Search&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;FirstLetter&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveSupport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Concern&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;included&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:by_letter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name LIKE ?&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;letter&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;%&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ClassMethods&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;first_letters&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;pluck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DISTINCT LEFT(name, 1)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;hey-what-about-sorting&quot;&gt;Hey, what about sorting?&lt;/h2&gt;

&lt;p&gt;Okay, you got me. Yes that is a good question. But let&amp;#39;s think about it first.
As I output the results in alphabetical order and numbers separated from letters
that means I have a knowledge of that.&lt;/p&gt;

&lt;p&gt;And this knowledge is kept in the view layer. I am simply intersecting arrays like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# views/letters/_letters.html.slim&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_letters&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;?Z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first_letters&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This construct gives me intersections ordered by alphabet and in numerical order if there are any.&lt;/p&gt;

&lt;p&gt;One thing less to worry about. That frees up some brain capacity what is in my
book ultimately is the point of refactoring.&lt;/p&gt;

        </description>
        <pubDate>Tue, 16 Jun 2015 00:00:00 +0700</pubDate>
        <link>http://firedev.com/posts/2015/refactoring-with-map-pluck-and-select-in-rails/</link>
        <guid isPermaLink="true">http://firedev.com/posts/2015/refactoring-with-map-pluck-and-select-in-rails/</guid>
        
        <category>rails</category>
        
        <category>refactoring</category>
        
        
        <category>posts</category>
        
      </item>
    
  </channel>
</rss>
